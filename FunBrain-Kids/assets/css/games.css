/* ===== GAME MODAL STYLES ===== */
.game-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    backdrop-filter: blur(5px);
}

.modal-content {
    background: white;
    margin: 2% auto;
    padding: 0;
    border-radius: var(--radius-lg);
    width: 90%;
    max-width: 900px;
    max-height: 90vh;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
    animation: modalSlideIn 0.3s ease;
}

@keyframes modalSlideIn {
    from {
        transform: translateY(-50px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.modal-header {
    background: var(--gradient-rainbow);
    color: white;
    padding: var(--spacing-lg);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-header h2 {
    font-size: 1.8rem;
    margin: 0;
}

.modal-controls {
    display: flex;
    gap: var(--spacing-sm);
}

.control-btn {
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    transition: all var(--transition-normal);
    display: flex;
    align-items: center;
    justify-content: center;
}

.control-btn:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: scale(1.1);
}

.modal-body {
    padding: var(--spacing-xl);
    max-height: 70vh;
    overflow-y: auto;
}

.game-container {
    min-height: 400px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* ===== CELEBRATION MODAL ===== */
.celebration-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0, 0, 0, 0.9);
    z-index: 2000;
    backdrop-filter: blur(5px);
}

.celebration-content {
    background: white;
    margin: 10% auto;
    padding: var(--spacing-xxl);
    border-radius: var(--radius-xl);
    width: 90%;
    max-width: 500px;
    text-align: center;
    position: relative;
    animation: celebrationPop 0.5s ease;
}

@keyframes celebrationPop {
    0% {
        transform: scale(0.5);
        opacity: 0;
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.celebration-animation {
    position: relative;
    margin-bottom: var(--spacing-lg);
}

.confetti {
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 100px;
    background: repeating-linear-gradient(
        45deg,
        #ff6b6b,
        #ff6b6b 10px,
        #4ecdc4 10px,
        #4ecdc4 20px,
        #45b7d1 20px,
        #45b7d1 30px,
        #96ceb4 30px,
        #96ceb4 40px
    );
    border-radius: 50%;
    animation: confettiSpin 2s linear infinite;
}

.celebration-star {
    font-size: 4rem;
    animation: starPulse 1s ease-in-out infinite;
}

@keyframes confettiSpin {
    0% { transform: translateX(-50%) rotate(0deg); }
    100% { transform: translateX(-50%) rotate(360deg); }
}

@keyframes starPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

.celebration-content h2 {
    font-size: 2.5rem;
    color: var(--primary-blue);
    margin-bottom: var(--spacing-md);
}

.celebration-content p {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: var(--spacing-xl);
}

.celebration-stats {
    display: flex;
    justify-content: center;
    gap: var(--spacing-xl);
    margin-bottom: var(--spacing-xl);
}

.stat-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    padding: var(--spacing-md);
    background: rgba(74, 144, 226, 0.1);
    border-radius: var(--radius-lg);
    color: var(--primary-blue);
    font-weight: 600;
}

.stat-item i {
    font-size: 1.5rem;
}

.celebration-btn {
    background: var(--gradient-green);
    color: white;
    border: none;
    padding: var(--spacing-md) var(--spacing-xl);
    border-radius: var(--radius-xl);
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-normal);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    margin: 0 auto;
}

.celebration-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

/* ===== GAME SPECIFIC STYLES ===== */

/* Common Game Elements */
.game-title {
    font-size: 2rem;
    color: var(--primary-blue);
    margin-bottom: var(--spacing-lg);
    text-align: center;
}

.game-score {
    background: var(--gradient-yellow);
    color: white;
    padding: var(--spacing-sm) var(--spacing-lg);
    border-radius: var(--radius-xl);
    font-weight: 600;
    margin-bottom: var(--spacing-lg);
    display: inline-block;
}

.game-question {
    font-size: 1.5rem;
    color: var(--primary-blue);
    margin-bottom: var(--spacing-xl);
    text-align: center;
    font-weight: 600;
}

.game-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-xl);
}

.game-option {
    background: white;
    border: 3px solid var(--primary-blue);
    border-radius: var(--radius-lg);
    padding: var(--spacing-lg);
    cursor: pointer;
    transition: all var(--transition-normal);
    text-align: center;
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--primary-blue);
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 80px;
}

.game-option:hover {
    background: var(--primary-blue);
    color: white;
    transform: translateY(-3px);
    box-shadow: var(--shadow-md);
}

.game-option.correct {
    background: var(--primary-green);
    color: white;
    border-color: var(--primary-green);
    animation: correctAnswer 0.5s ease;
}

.game-option.incorrect {
    background: #ff6b6b;
    color: white;
    border-color: #ff6b6b;
    animation: incorrectAnswer 0.5s ease;
}

@keyframes correctAnswer {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

@keyframes incorrectAnswer {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
    100% { transform: translateX(0); }
}

.game-controls {
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    margin-top: var(--spacing-xl);
}

.game-btn {
    background: var(--gradient-blue);
    color: white;
    border: none;
    padding: var(--spacing-md) var(--spacing-xl);
    border-radius: var(--radius-xl);
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-normal);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}

.game-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.game-btn.secondary {
    background: #6c757d;
}

.game-btn.success {
    background: var(--gradient-green);
}

.game-btn.warning {
    background: var(--gradient-yellow);
}

/* ===== LETTER GAME STYLES ===== */
.letter-display {
    font-size: 6rem;
    font-weight: bold;
    color: var(--primary-blue);
    margin: var(--spacing-xl) 0;
    text-align: center;
    text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.1);
    animation: letterBounce 2s ease-in-out infinite;
}

@keyframes letterBounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-20px);
    }
    60% {
        transform: translateY(-10px);
    }
}

/* ===== FRUIT MATCHING GAME STYLES ===== */
.fruit-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: var(--spacing-md);
    max-width: 400px;
    margin: 0 auto;
}

.fruit-card {
    aspect-ratio: 1;
    background: white;
    border: 3px solid var(--primary-green);
    border-radius: var(--radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all var(--transition-normal);
    font-size: 2rem;
    position: relative;
    overflow: hidden;
}

.fruit-card:hover {
    transform: scale(1.05);
    box-shadow: var(--shadow-md);
}

.fruit-card.flipped {
    background: var(--gradient-green);
    color: white;
    transform: rotateY(180deg);
}

.fruit-card.matched {
    background: var(--gradient-yellow);
    color: white;
    animation: matchedCard 0.5s ease;
}

@keyframes matchedCard {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

.fruit-card .card-back {
    font-size: 1.5rem;
    color: var(--primary-green);
    font-weight: bold;
}

.fruit-card .card-front {
    display: none;
}

.fruit-card.flipped .card-back {
    display: none;
}

.fruit-card.flipped .card-front {
    display: block;
}

/* ===== NUMBER COUNTING GAME STYLES ===== */
.number-display {
    font-size: 5rem;
    font-weight: bold;
    color: var(--primary-purple);
    margin: var(--spacing-xl) 0;
    text-align: center;
    text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.1);
}

.objects-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--spacing-md);
    margin: var(--spacing-xl) 0;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
}

.counting-object {
    font-size: 3rem;
    animation: objectFloat 2s ease-in-out infinite;
}

.counting-object:nth-child(odd) {
    animation-delay: 0.5s;
}

@keyframes objectFloat {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
}

/* ===== COLOR PUZZLE GAME STYLES ===== */
.color-palette {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-lg);
    margin: var(--spacing-xl) 0;
    max-width: 300px;
    margin-left: auto;
    margin-right: auto;
}

.color-item {
    aspect-ratio: 1;
    border-radius: var(--radius-lg);
    cursor: pointer;
    transition: all var(--transition-normal);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
    font-size: 1.2rem;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    border: 3px solid transparent;
}

.color-item:hover {
    transform: scale(1.1);
    box-shadow: var(--shadow-md);
}

.color-item.selected {
    border-color: white;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
}

.color-red { background: #ff6b6b; }
.color-blue { background: #4ecdc4; }
.color-green { background: #45b7d1; }
.color-yellow { background: #feca57; }
.color-purple { background: #a55eea; }
.color-orange { background: #ff9ff3; }

.color-question {
    background: white;
    border: 3px solid var(--primary-blue);
    border-radius: var(--radius-lg);
    padding: var(--spacing-xl);
    margin: var(--spacing-xl) 0;
    text-align: center;
    box-shadow: var(--shadow-sm);
}

.color-object {
    font-size: 4rem;
    margin: var(--spacing-md) 0;
}

/* ===== TIME LEARNING GAME STYLES ===== */
.clock-container {
    position: relative;
    width: 200px;
    height: 200px;
    margin: var(--spacing-xl) auto;
    background: white;
    border: 8px solid var(--primary-blue);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--shadow-lg);
}

.clock-face {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: white;
}

.clock-number {
    position: absolute;
    font-size: 1.2rem;
    font-weight: bold;
    color: var(--primary-blue);
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.clock-hand {
    position: absolute;
    background: var(--primary-blue);
    border-radius: 2px;
    transform-origin: bottom center;
    top: 50%;
    left: 50%;
}

.hour-hand {
    width: 4px;
    height: 50px;
    margin-left: -2px;
    margin-top: -50px;
}

.minute-hand {
    width: 2px;
    height: 70px;
    margin-left: -1px;
    margin-top: -70px;
}

.clock-center {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 12px;
    height: 12px;
    background: var(--primary-blue);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
}

.time-options {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-lg);
    margin: var(--spacing-xl) 0;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
}

.time-option {
    background: white;
    border: 3px solid var(--primary-blue);
    border-radius: var(--radius-lg);
    padding: var(--spacing-lg);
    text-align: center;
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--primary-blue);
    cursor: pointer;
    transition: all var(--transition-normal);
}

.time-option:hover {
    background: var(--primary-blue);
    color: white;
    transform: translateY(-3px);
    box-shadow: var(--shadow-md);
}

/* ===== PROGRESS INDICATORS ===== */
.progress-container {
    background: rgba(255, 255, 255, 0.9);
    border-radius: var(--radius-lg);
    padding: var(--spacing-md);
    margin: var(--spacing-lg) 0;
    text-align: center;
}

.progress-bar-container {
    background: #e9ecef;
    border-radius: var(--radius-xl);
    height: 12px;
    overflow: hidden;
    margin: var(--spacing-sm) 0;
}

.progress-bar-fill {
    height: 100%;
    background: var(--gradient-green);
    border-radius: var(--radius-xl);
    transition: width 0.5s ease;
    position: relative;
}

.progress-bar-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    animation: progressShine 2s infinite;
}

@keyframes progressShine {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

.progress-text {
    color: var(--primary-blue);
    font-weight: 600;
    font-size: 0.9rem;
}

/* ===== RESPONSIVE GAME STYLES ===== */
@media (max-width: 768px) {
    .modal-content {
        width: 95%;
        margin: 5% auto;
    }
    
    .modal-body {
        padding: var(--spacing-md);
    }
    
    .game-options {
        grid-template-columns: 1fr;
    }
    
    .fruit-grid {
        grid-template-columns: repeat(3, 1fr);
    }
    
    .color-palette {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .time-options {
        grid-template-columns: 1fr;
    }
    
    .celebration-content {
        padding: var(--spacing-lg);
    }
    
    .celebration-stats {
        flex-direction: column;
        gap: var(--spacing-sm);
    }
}

@media (max-width: 480px) {
    .letter-display {
        font-size: 4rem;
    }
    
    .number-display {
        font-size: 3rem;
    }
    
    .clock-container {
        width: 150px;
        height: 150px;
    }
    
    .objects-container {
        max-width: 300px;
    }
    
    .counting-object {
        font-size: 2rem;
    }
    
    .color-object {
        font-size: 3rem;
    }
    
    .game-option {
        font-size: 1rem;
        min-height: 60px;
    }
}

/* ===== GAME FEEDBACK STYLES ===== */
.feedback-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1500;
    pointer-events: none;
}

.feedback-message {
    background: white;
    border-radius: var(--radius-lg);
    padding: var(--spacing-md) var(--spacing-lg);
    margin-bottom: var(--spacing-sm);
    box-shadow: var(--shadow-md);
    animation: feedbackSlide 0.3s ease;
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}

.feedback-message.success {
    border-left: 4px solid var(--primary-green);
    color: var(--primary-green);
}

.feedback-message.error {
    border-left: 4px solid #ff6b6b;
    color: #ff6b6b;
}

.feedback-message.info {
    border-left: 4px solid var(--primary-blue);
    color: var(--primary-blue);
}

@keyframes feedbackSlide {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

/* ===== LOADING STATES ===== */
.game-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 300px;
    gap: var(--spacing-lg);
}

.game-spinner {
    width: 50px;
    height: 50px;
    border: 4px solid rgba(74, 144, 226, 0.3);
    border-top: 4px solid var(--primary-blue);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

.game-loading-text {
    color: var(--primary-blue);
    font-size: 1.2rem;
    font-weight: 600;
}

/* ===== SOUND CONTROL ===== */
.sound-toggle {
    position: fixed;
    top: 20px;
    right: 20px;
    background: white;
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: var(--shadow-md);
    z-index: 1000;
    color: var(--primary-blue);
    font-size: 1.2rem;
    transition: all var(--transition-normal);
}

.sound-toggle:hover {
    transform: scale(1.1);
    box-shadow: var(--shadow-lg);
}

.sound-toggle.muted {
    background: #ff6b6b;
    color: white;
}

/* Enhanced Game Styles */
.stats-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10001;
    overflow-y: auto;
}

.stats-content {
    background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
    color: white;
    padding: 30px;
    border-radius: 20px;
    max-width: 600px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
}

.stats-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 25px;
}

.close-btn {
    background: none;
    border: none;
    color: white;
    font-size: 2rem;
    cursor: pointer;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.3s;
}

.close-btn:hover {
    background: rgba(255, 255, 255, 0.2);
}

.stats-overview {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 15px;
    margin-bottom: 30px;
}

.overview-item {
    background: rgba(255, 255, 255, 0.1);
    padding: 20px;
    border-radius: 15px;
    text-align: center;
    transition: transform 0.3s;
}

.overview-item:hover {
    transform: translateY(-5px);
}

.overview-icon {
    font-size: 2rem;
    margin-bottom: 10px;
}

.overview-value {
    display: block;
    font-size: 1.8rem;
    font-weight: bold;
    margin-bottom: 5px;
}

.overview-label {
    font-size: 0.9rem;
    opacity: 0.8;
}

.stats-games h3, .stats-achievements h3 {
    margin: 20px 0 15px 0;
    padding-bottom: 10px;
    border-bottom: 2px solid rgba(255, 255, 255, 0.2);
}

.game-stat {
    background: rgba(255, 255, 255, 0.1);
    padding: 15px;
    border-radius: 10px;
    margin-bottom: 10px;
}

.game-stat-name {
    font-weight: bold;
    margin-bottom: 5px;
}

.game-stat-details {
    display: flex;
    gap: 20px;
    font-size: 0.9rem;
    opacity: 0.8;
}

.achievements-grid {
    display: grid;
    gap: 15px;
}

.achievement-item {
    display: flex;
    align-items: center;
    gap: 15px;
    background: rgba(255, 255, 255, 0.1);
    padding: 15px;
    border-radius: 10px;
    transition: all 0.3s;
}

.achievement-item.unlocked {
    background: rgba(46, 204, 113, 0.2);
    border: 2px solid #2ecc71;
}

.achievement-item.locked {
    opacity: 0.5;
    filter: grayscale(100%);
}

.achievement-icon {
    font-size: 2rem;
}

.achievement-info {
    flex: 1;
}

.achievement-name {
    font-weight: bold;
    margin-bottom: 5px;
}

.achievement-desc {
    font-size: 0.9rem;
    opacity: 0.8;
    margin-bottom: 5px;
}

.achievement-progress {
    font-size: 0.8rem;
    background: rgba(255, 255, 255, 0.2);
    padding: 2px 8px;
    border-radius: 10px;
    display: inline-block;
}

/* Enhanced game card interactions */
.game-card {
    position: relative;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
}

.game-card:not(.locked):hover {
    transform: translateY(-8px) rotateY(5deg);
    box-shadow: 0 15px 35px rgba(0,0,0,0.2);
}

.game-card.completed::after {
    content: '✓';
    position: absolute;
    top: 10px;
    right: 10px;
    background: #2ecc71;
    color: white;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    animation: checkmarkPop 0.5s ease-out;
}

@keyframes checkmarkPop {
    0% { transform: scale(0) rotate(180deg); }
    50% { transform: scale(1.2) rotate(0deg); }
    100% { transform: scale(1) rotate(0deg); }
}

/* Enhanced loading animations */
.loading-text {
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
    background-size: 400% 400%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientText 3s ease-in-out infinite;
}

@keyframes gradientText {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
}

/* Enhanced button effects */
.btn {
    position: relative;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.15);
}

.btn:active {
    transform: translateY(0);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

/* Sound wave animation for audio feedback */
.sound-indicator {
    position: fixed;
    top: 20px;
    left: 20px;
    display: flex;
    gap: 2px;
    z-index: 1000;
}

.sound-wave {
    width: 3px;
    height: 20px;
    background: #4ecdc4;
    border-radius: 2px;
    animation: soundWave 1s ease-in-out infinite;
}

.sound-wave:nth-child(2) { animation-delay: 0.1s; }
.sound-wave:nth-child(3) { animation-delay: 0.2s; }
.sound-wave:nth-child(4) { animation-delay: 0.3s; }

@keyframes soundWave {
    0%, 100% { height: 5px; opacity: 0.3; }
    50% { height: 20px; opacity: 1; }
}
